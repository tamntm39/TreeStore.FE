/* tslint:disable */
/* eslint-disable */
/* Code generated by ng-openapi-gen DO NOT EDIT. */

import { HttpClient, HttpContext } from '@angular/common/http';
import { Injectable } from '@angular/core';
import { Observable } from 'rxjs';
import { map } from 'rxjs/operators';

import { BaseService } from '../base-service';
import { ApiConfiguration } from '../api-configuration';
import { StrictHttpResponse } from '../strict-http-response';

import { apiPayPalCaptureOrderOrderIdPost$Json } from '../fn/pay-pal/api-pay-pal-capture-order-order-id-post-json';
import { ApiPayPalCaptureOrderOrderIdPost$Json$Params } from '../fn/pay-pal/api-pay-pal-capture-order-order-id-post-json';
import { apiPayPalCaptureOrderOrderIdPost$Plain } from '../fn/pay-pal/api-pay-pal-capture-order-order-id-post-plain';
import { ApiPayPalCaptureOrderOrderIdPost$Plain$Params } from '../fn/pay-pal/api-pay-pal-capture-order-order-id-post-plain';
import { apiPayPalCreateOrderPost } from '../fn/pay-pal/api-pay-pal-create-order-post';
import { ApiPayPalCreateOrderPost$Params } from '../fn/pay-pal/api-pay-pal-create-order-post';
import { CaptureOrderResponseResultCustomModel } from '../models/capture-order-response-result-custom-model';

@Injectable({ providedIn: 'root' })
export class PayPalService extends BaseService {
  constructor(config: ApiConfiguration, http: HttpClient) {
    super(config, http);
  }

  /** Path part for operation `apiPayPalCreateOrderPost()` */
  static readonly ApiPayPalCreateOrderPostPath = '/api/PayPal/create-order';

  /**
   * This method provides access to the full `HttpResponse`, allowing access to response headers.
   * To access only the response body, use `apiPayPalCreateOrderPost()` instead.
   *
   * This method sends `application/*+json` and handles request body of type `application/*+json`.
   */
  apiPayPalCreateOrderPost$Response(params?: ApiPayPalCreateOrderPost$Params, context?: HttpContext): Observable<StrictHttpResponse<void>> {
    return apiPayPalCreateOrderPost(this.http, this.rootUrl, params, context);
  }

  /**
   * This method provides access only to the response body.
   * To access the full response (for headers, for example), `apiPayPalCreateOrderPost$Response()` instead.
   *
   * This method sends `application/*+json` and handles request body of type `application/*+json`.
   */
  apiPayPalCreateOrderPost(params?: ApiPayPalCreateOrderPost$Params, context?: HttpContext): Observable<void> {
    return this.apiPayPalCreateOrderPost$Response(params, context).pipe(
      map((r: StrictHttpResponse<void>): void => r.body)
    );
  }

  /** Path part for operation `apiPayPalCaptureOrderOrderIdPost()` */
  static readonly ApiPayPalCaptureOrderOrderIdPostPath = '/api/PayPal/capture-order/{orderId}';

  /**
   * This method provides access to the full `HttpResponse`, allowing access to response headers.
   * To access only the response body, use `apiPayPalCaptureOrderOrderIdPost$Plain()` instead.
   *
   * This method doesn't expect any request body.
   */
  apiPayPalCaptureOrderOrderIdPost$Plain$Response(params: ApiPayPalCaptureOrderOrderIdPost$Plain$Params, context?: HttpContext): Observable<StrictHttpResponse<CaptureOrderResponseResultCustomModel>> {
    return apiPayPalCaptureOrderOrderIdPost$Plain(this.http, this.rootUrl, params, context);
  }

  /**
   * This method provides access only to the response body.
   * To access the full response (for headers, for example), `apiPayPalCaptureOrderOrderIdPost$Plain$Response()` instead.
   *
   * This method doesn't expect any request body.
   */
  apiPayPalCaptureOrderOrderIdPost$Plain(params: ApiPayPalCaptureOrderOrderIdPost$Plain$Params, context?: HttpContext): Observable<CaptureOrderResponseResultCustomModel> {
    return this.apiPayPalCaptureOrderOrderIdPost$Plain$Response(params, context).pipe(
      map((r: StrictHttpResponse<CaptureOrderResponseResultCustomModel>): CaptureOrderResponseResultCustomModel => r.body)
    );
  }

  /**
   * This method provides access to the full `HttpResponse`, allowing access to response headers.
   * To access only the response body, use `apiPayPalCaptureOrderOrderIdPost$Json()` instead.
   *
   * This method doesn't expect any request body.
   */
  apiPayPalCaptureOrderOrderIdPost$Json$Response(params: ApiPayPalCaptureOrderOrderIdPost$Json$Params, context?: HttpContext): Observable<StrictHttpResponse<CaptureOrderResponseResultCustomModel>> {
    return apiPayPalCaptureOrderOrderIdPost$Json(this.http, this.rootUrl, params, context);
  }

  /**
   * This method provides access only to the response body.
   * To access the full response (for headers, for example), `apiPayPalCaptureOrderOrderIdPost$Json$Response()` instead.
   *
   * This method doesn't expect any request body.
   */
  apiPayPalCaptureOrderOrderIdPost$Json(params: ApiPayPalCaptureOrderOrderIdPost$Json$Params, context?: HttpContext): Observable<CaptureOrderResponseResultCustomModel> {
    return this.apiPayPalCaptureOrderOrderIdPost$Json$Response(params, context).pipe(
      map((r: StrictHttpResponse<CaptureOrderResponseResultCustomModel>): CaptureOrderResponseResultCustomModel => r.body)
    );
  }

}
